name: Run tests and upload coverage

on:
  push:
    branches: 
      - '**'  # Run on all branches
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
      
    - name: Install dependencies
      run: |
        uv sync --extra test --extra dev
        
    - name: Type check with beartype (runtime)
      run: |
        uv run python -c "import janssen; print('Beartype validation passed')"
        
    - name: Run tests
      id: pytest
      env:
        JAX_PLATFORMS: cpu
      run: uv run pytest tests/ --cov=src/janssen --cov-branch --cov-report=xml --cov-report=html --cov-report=term-missing --junitxml=test-results.xml -v || true

    - name: List generated files (debug)
      if: always()
      run: |
        echo "Current directory:"
        pwd
        echo "Files in current directory:"
        ls -la
        echo "Checking for test artifacts:"
        if [ -f "test-results.xml" ]; then echo "✓ test-results.xml found"; else echo "✗ test-results.xml not found"; fi
        if [ -f "coverage.xml" ]; then echo "✓ coverage.xml found"; else echo "✗ coverage.xml not found"; fi
        if [ -d "htmlcov" ]; then echo "✓ htmlcov/ found"; else echo "✗ htmlcov/ not found"; fi
      shell: bash

    - name: Upload results to Codecov
      uses: codecov/codecov-action@v5
      if: always()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: debangshu-mukherjee/janssen
        files: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          test-results.xml
          htmlcov/
          coverage.xml
        if-no-files-found: warn
          
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && matrix.os == 'ubuntu-latest'
      with:
        files: test-results.xml
        check_name: Test Results (Python ${{ matrix.python-version }})
        comment_mode: create new
        
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      run: uv python install 3.11
      
    - name: Install build dependencies
      run: uv sync --extra dev
      
    - name: Build package
      run: uv build
      
    - name: Check package metadata
      run: |
        uv run python -m twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/